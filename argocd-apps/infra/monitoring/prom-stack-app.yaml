apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 70.3.0
    helm:
      releaseName: monitoring
      values: |
        prometheus:
          prometheusSpec:
            storageSpec: null
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 400m
                memory: 1Gi

        grafana:
          adminPassword: null
          ingress:
            enabled: false
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 250m
              memory: 750Mi

          sidecar:
            dashboards:
              enabled: true
              label: grafana_dashboard
              labelValue: "1"
            datasources:
              enabled: true
              label: grafana_datasource
              labelValue: "1"
            alerting:
              enabled: true
              label: grafana_alerts
              labelValue: "1"
              searchNamespace: monitoring

          grafana.ini:
            smtp:
              enabled: "true"
              host: smtp.zarenoff.top:587
              user: test@zarenoff.top
              password: ${SMTP_PASSWORD}
              from_address: test@zarenoff.top
              from_name: Grafana Alerts

        alertmanager:
          enabled: true
          config:
            global:
              smtp_smarthost: 'smtp.zarenoff.top:587'
              smtp_from: 'test@zarenoff.top'
              smtp_auth_username: 'test@zarenoff.top'
              smtp_auth_password_file: '/etc/alertmanager/secrets/smtp-password/SMTP_PASSWORD'
              smtp_require_tls: true
            route:
              group_by: ['alertname', 'job', 'severity']
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: email-notifications
              routes:
              - match:
                  severity: critical
                receiver: email-notifications
                continue: true
              - match:
                  severity: warning
                receiver: email-notifications
            receivers:
            - name: email-notifications
              email_configs:
              - to: 'admin@zarenoff.top'
                send_resolved: true
          alertmanagerSpec:
            storage: null
            secrets:
              - smtp-password

          smtp:
            password:
              valueFrom:
                secretKeyRef:
                  name: smtp-password
                  key: SMTP_PASSWORD

      parameters:
        - name: crds.create
          value: "true"
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true